// Mocks generated by Mockito 5.4.6 from annotations
// in clean_ecommerce/test/mocks/generated_mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:clean_ecommerce/domain/states/product_listing_state.dart'
    as _i5;
import 'package:mockito/mockito.dart' as _i1;

import 'common/dialog_mock.dart' as _i2;
import 'presenters/product_listing_presenter.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [DialogMockito].
///
/// See the documentation for Mockito's code generation for more information.
class MockDialogMockito extends _i1.Mock implements _i2.DialogMockito {
  MockDialogMockito() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void showError(String? message) => super.noSuchMethod(
    Invocation.method(#showError, [message]),
    returnValueForMissingStub: null,
  );

  @override
  void showSuccess(String? message) => super.noSuchMethod(
    Invocation.method(#showSuccess, [message]),
    returnValueForMissingStub: null,
  );

  @override
  void showWarning(String? message) => super.noSuchMethod(
    Invocation.method(#showWarning, [message]),
    returnValueForMissingStub: null,
  );

  @override
  _i3.Future<bool> showConfirm(String? message) =>
      (super.noSuchMethod(
            Invocation.method(#showConfirm, [message]),
            returnValue: _i3.Future<bool>.value(false),
          )
          as _i3.Future<bool>);

  @override
  void notifySuccess(String? message) => super.noSuchMethod(
    Invocation.method(#notifySuccess, [message]),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [ProductListingPresenterMockito].
///
/// See the documentation for Mockito's code generation for more information.
class MockProductListingPresenterMockito extends _i1.Mock
    implements _i4.ProductListingPresenterMockito {
  MockProductListingPresenterMockito() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void show(_i5.ProductListingState? state) => super.noSuchMethod(
    Invocation.method(#show, [state]),
    returnValueForMissingStub: null,
  );

  @override
  void setInProgress(bool? value) => super.noSuchMethod(
    Invocation.method(#setInProgress, [value]),
    returnValueForMissingStub: null,
  );
}
